version: '3.8'

services:
  postgres:
    image: postgres:16
    container_name: algoarena_postgres
    environment:
      POSTGRES_DB: algoarena
      POSTGRES_USER: algo_user
      POSTGRES_PASSWORD: algo_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U algo_user -d algoarena"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: algoarena_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: algoarena_app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/algoarena
      SPRING_DATASOURCE_USERNAME: algo_user
      SPRING_DATASOURCE_PASSWORD: algo_pass
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_BUCKET_NAME: algo-bucket
      MINIO_PRESIGNED_URL_EXPIRY: 5
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data: